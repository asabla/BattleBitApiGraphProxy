@page "/"

<PageTitle>Battlebit Server explorer</PageTitle>

<MudGrid Spacing="2">
    <MudItem xs="12">
        <MudTextField @bind-Value="_serverName"
                    Label="Server name"
                    Variant="Variant.Outlined"
                    Clearable="true"
                    DebounceInterval="300" >
        </MudTextField>
    </MudItem>

    <MudItem xs="6">
        <MudSelect T="string"
                    Label="Game modes"
                    Variant="Variant.Outlined"
                    MultiSelection="true"
                    Clearable="true"
                    SelectedValuesChanged="OnGameModeChanged">
            @foreach (var mode in _gameModeList)
            {
                <MudSelectItem T="string" Value="@mode">
                    @mode
                </MudSelectItem>
            }
        </MudSelect>
    </MudItem>

    <MudItem xs="6">
        <MudSelect T="string"
                    Label="Server regions"
                    Variant="Variant.Outlined"
                    MultiSelection="true"
                    Clearable="true"
                    SelectedValuesChanged="OnRegionChanged">
            @foreach (var region in _regionList)
            {
                <MudSelectItem T="string" Value="region">
                    @region
                </MudSelectItem>
            }
        </MudSelect>
    </MudItem>

    @* Server list *@
    <MudItem xs="12">
        <UseGetServers Context="result"
                        ServerName="@_serverName"
                        Regions="@_regionTypes.ToArray()"
                        GameModes="@_gameModes.ToArray()"
                        Maps="@_mapTypes.ToArray()"
                        MapSizes="@_mapSizeTypes.ToArray()">
            <ChildContent>
                <MudExpansionPanels MultiExpansion="true">
                    @foreach (var server in result.Servers!.Items!)
                    {
                        <MudExpansionPanel>
                            <TitleContent>
                                <div class="d-flex">
                                    <MudIcon Icon="@Icons.Material.Filled.Computer"
                                            class="mr-3" />

                                    <MudIcon Icon="@GetLockIcon(server.HasPassword)"
                                            Title="@GetLockAltString(server.HasPassword)"
                                            class="mr-3" />

                                    <MudChip Variant="Variant.Outlined" Color="GetOfficialColor(server.IsOfficial)">
                                            @GetOfficialString(server.IsOfficial)
                                    </MudChip>

                                    <MudText>
                                        @server.Name - Players: @server.Players/@server.MaxPlayers (@server.QueuePlayers)
                                    </MudText>
                                </div>
                            </TitleContent>

                            <ChildContent>
                                @* Ordinary data *@
                                <MudCard>
                                    <MudCardContent>
                                        <MudText>Anticheat system: @server.AntiCheat</MudText>
                                        <MudText>Region: @server.Region</MudText>
                                        <MudText>Day or night: @server.DayNight</MudText>
                                        <MudText>Game mode: @server.GameMode</MudText>
                                        <MudText>Last update: @server.LastUpdated</MudText>
                                    </MudCardContent>

                                    @* TODO: add join server action here? *@
                                    @* <MudCardActions>
                                    </MudCardActions> *@
                                </MudCard>

                                @* Raw string data *@
                                <MudCard>
                                    <MudCardContent>
                                        <MudText>Anticheat string: @server.RawAPIData.AntiCheatTypeString</MudText>
                                        <MudText>Day & night string: @server.RawAPIData.DayNightTypeString</MudText>
                                        <MudText>Game mode string: @server.RawAPIData.GameModeTypeString</MudText>
                                        <MudText>Map type string: @server.RawAPIData.MapTypeString</MudText>
                                        <MudText>Map size string: @server.RawAPIData.MapSizeTypeString</MudText>
                                        <MudText>Region type string: @server.RawAPIData.RegionTypeString</MudText>
                                    </MudCardContent>
                                </MudCard>
                            </ChildContent>
                        </MudExpansionPanel>
                    }
                </MudExpansionPanels>
            </ChildContent>

            <ErrorContent>
                Something went wrong fetching servers<br />
                @result.First().Message
            </ErrorContent>

            <LoadingContent>
                <MudText>Fetching servers...</MudText>
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" class="my-7" />
            </LoadingContent>
        </UseGetServers>
    </MudItem>
</MudGrid>


@code {
    private string _serverName = "";
    private IEnumerable<RegionType> _regionTypes = Enumerable.Empty<RegionType>();
    private IEnumerable<GameModeType> _gameModes = Enumerable.Empty<GameModeType>();
    private IEnumerable<MapType> _mapTypes = Enumerable.Empty<MapType>();
    private IEnumerable<MapSizeType> _mapSizeTypes = Enumerable.Empty<MapSizeType>();

    private Color GetOfficialColor(bool isOfficial)
        => isOfficial ? Color.Success : Color.Default;

    private string GetOfficialString(bool isOfficial)
        => isOfficial ? "Official" : "Unofficial";

    private string GetLockIcon(bool hasPassword)
        => hasPassword
            ? Icons.Material.Filled.Lock
            : Icons.Material.Filled.LockOpen;

    private string GetLockAltString(bool hasPassword)
        => hasPassword
            ? "Server is pasword protected"
            : "Server has no password protection";

    private string[] GetGameModeList()
        => Enum.GetNames(typeof(GameModeType)).ToArray();

    private string[] GetRegionList()
        => Enum.GetNames(typeof(RegionType)).ToArray();

    private string _gameModeValue { get; set; } = "Nothing selected";
    private IEnumerable<string> _gameModeOptions { get; set; } = new HashSet<string>();
    private string[] _gameModeList => GetGameModeList();

    private string _regionValue { get; set; } = "Nothing selected";
    private IEnumerable<string> _regionOptions { get; set; } = new HashSet<string>();
    private string[] _regionList => GetRegionList();

    private void OnGameModeChanged(IEnumerable<string> gameModes)
    {
        _gameModes = Enum.GetValues<GameModeType>()
            .Where(x => gameModes.Contains(x.ToString()) is false);
    }

    private void OnRegionChanged(IEnumerable<string> regions)
    {
        _regionTypes = Enum.GetValues<RegionType>()
            .Where(x => regions.Contains(x.ToString()) is false);
    }
}